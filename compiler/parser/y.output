Terminals unused in grammar

   UNKNOWN_TOKEN


Grammar

    0 $accept: start $end

    1 start: global_statements

    2 global_statements: global_statement global_statements
    3                  | %empty

    4 local_statements: local_statement local_statements
    5                 | %empty

    6 generic_local_statement: expression ';'
    7                        | conditional_statement
    8                        | loop
    9                        | return_statement ';'

   10 local_statement: block_statement
   11                | generic_local_statement

   12 function_declaration: function_decl_statement '{' local_statements '}'
   13                     | function_decl_statement ';'

   14 function_decl_statement: type identifier '(' arguments_decl ')'

   15 identifier: IDENTIFIER_TOKEN

   16 type: IDENTIFIER_TOKEN

   17 arguments_decl: argument_decl ',' arguments_decl
   18               | argument_decl
   19               | default_arg_decl
   20               | %empty

   21 argument_decl: declaration_expression

   22 default_arg_decl: declaration_constexpr ',' default_arg_decl
   23                 | declaration_constexpr

   24 expression: literal
   25           | '(' expression ')'
   26           | binary_expr
   27           | unary_operation
   28           | assignment
   29           | function_call
   30           | lvalue_expression

   31 literal: INTEGER_TOKEN
   32        | FLOAT_TOKEN

   33 binary_expr: expression '+' expression
   34            | expression '-' expression
   35            | expression '*' expression
   36            | expression '/' expression
   37            | expression '%' expression
   38            | expression AND expression
   39            | expression OR expression
   40            | expression '<' expression
   41            | expression '>' expression
   42            | expression GEQ expression
   43            | expression LEQ expression
   44            | expression NEQ expression
   45            | expression EQ expression

   46 global_statement: function_declaration
   47                 | assignment ';'

   48 lvalue_expression: declaration_expression
   49                  | identifier

   50 declaration_expression: type identifier

   51 declaration_constexpr: declaration_expression '=' literal

   52 unary_operation: lvalue_expression INCREMENT
   53                | INCREMENT lvalue_expression
   54                | lvalue_expression DECREMENT
   55                | DECREMENT lvalue_expression
   56                | '!' expression
   57                | '-' expression

   58 assignment: lvalue_expression '=' expression
   59           | lvalue_expression PLUS_EQ expression
   60           | lvalue_expression MIN_EQ expression
   61           | lvalue_expression MULT_EQ expression
   62           | lvalue_expression DIV_EQ expression
   63           | lvalue_expression REM_EQ expression

   64 function_call: identifier '(' argument_list ')'

   65 argument_list: argument ',' argument_list
   66              | argument
   67              | %empty

   68 argument: expression

   69 conditional_statement: if_statement else_statement
   70                      | if_statement

   71 if_statement: IF_TOKEN '(' expression ')' local_statement

   72 else_statement: ELSE_TOKEN local_statement

   73 return_statement: RETURN_TOKEN
   74                 | RETURN_TOKEN expression

   75 block_statement: '{' local_statements '}'

   76 loop: for_statement
   77     | while_statement

   78 for_statement: FOR_TOKEN '(' expression ';' expression ';' expression ')' loop_init

   79 while_statement: WHILE_TOKEN '(' expression ')' loop_init

   80 loop_init: generic_local_statement
   81          | break_statement
   82          | loop_block

   83 loop_statements: loop_statement loop_statements
   84                | loop_statement

   85 loop_block: '{' loop_statements '}'

   86 loop_statement: local_statement
   87               | break_statement

   88 break_statement: BREAK_TOKEN ';'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 56
'%' (37) 37
'(' (40) 14 25 64 71 78 79
')' (41) 14 25 64 71 78 79
'*' (42) 35
'+' (43) 33
',' (44) 17 22 65
'-' (45) 34 57
'/' (47) 36
';' (59) 6 9 13 47 78 88
'<' (60) 40
'=' (61) 51 58
'>' (62) 41
'{' (123) 12 75 85
'}' (125) 12 75 85
error (256)
IF_TOKEN (258) 71
ELSE_TOKEN (259) 72
FOR_TOKEN (260) 78
WHILE_TOKEN (261) 79
BREAK_TOKEN (262) 88
RETURN_TOKEN (263) 73 74
GEQ (264) 42
LEQ (265) 43
NEQ (266) 44
EQ (267) 45
AND (268) 38
OR (269) 39
PLUS_EQ (270) 59
MIN_EQ (271) 60
MULT_EQ (272) 61
DIV_EQ (273) 62
REM_EQ (274) 63
INCREMENT (275) 52 53
DECREMENT (276) 54 55
IDENTIFIER_TOKEN (277) 15 16
INTEGER_TOKEN (278) 31
FLOAT_TOKEN (279) 32
UNKNOWN_TOKEN (280)
NO_TOKEN (281)


Nonterminals, with rules where they appear

$accept (42)
    on left: 0
start (43)
    on left: 1, on right: 0
global_statements (44)
    on left: 2 3, on right: 1 2
local_statements (45)
    on left: 4 5, on right: 4 12 75
generic_local_statement (46)
    on left: 6 7 8 9, on right: 11 80
local_statement (47)
    on left: 10 11, on right: 4 71 72 86
function_declaration (48)
    on left: 12 13, on right: 46
function_decl_statement (49)
    on left: 14, on right: 12 13
identifier (50)
    on left: 15, on right: 14 49 50 64
type (51)
    on left: 16, on right: 14 50
arguments_decl (52)
    on left: 17 18 19 20, on right: 14 17
argument_decl (53)
    on left: 21, on right: 17 18
default_arg_decl (54)
    on left: 22 23, on right: 19 22
expression (55)
    on left: 24 25 26 27 28 29 30, on right: 6 25 33 34 35 36 37 38
    39 40 41 42 43 44 45 56 57 58 59 60 61 62 63 68 71 74 78 79
literal (56)
    on left: 31 32, on right: 24 51
binary_expr (57)
    on left: 33 34 35 36 37 38 39 40 41 42 43 44 45, on right: 26
global_statement (58)
    on left: 46 47, on right: 2
lvalue_expression (59)
    on left: 48 49, on right: 30 52 53 54 55 58 59 60 61 62 63
declaration_expression (60)
    on left: 50, on right: 21 48 51
declaration_constexpr (61)
    on left: 51, on right: 22 23
unary_operation (62)
    on left: 52 53 54 55 56 57, on right: 27
assignment (63)
    on left: 58 59 60 61 62 63, on right: 28 47
function_call (64)
    on left: 64, on right: 29
argument_list (65)
    on left: 65 66 67, on right: 64 65
argument (66)
    on left: 68, on right: 65 66
conditional_statement (67)
    on left: 69 70, on right: 7
if_statement (68)
    on left: 71, on right: 69 70
else_statement (69)
    on left: 72, on right: 69
return_statement (70)
    on left: 73 74, on right: 9
block_statement (71)
    on left: 75, on right: 10
loop (72)
    on left: 76 77, on right: 8
for_statement (73)
    on left: 78, on right: 76
while_statement (74)
    on left: 79, on right: 77
loop_init (75)
    on left: 80 81 82, on right: 78 79
loop_statements (76)
    on left: 83 84, on right: 83 85
loop_block (77)
    on left: 85, on right: 82
loop_statement (78)
    on left: 86 87, on right: 83 84
break_statement (79)
    on left: 88, on right: 81 87


State 0

    0 $accept: . start $end

    IDENTIFIER_TOKEN  shift, and go to state 1

    $default  reduce using rule 3 (global_statements)

    start                    go to state 2
    global_statements        go to state 3
    function_declaration     go to state 4
    function_decl_statement  go to state 5
    identifier               go to state 6
    type                     go to state 7
    global_statement         go to state 8
    lvalue_expression        go to state 9
    declaration_expression   go to state 10
    assignment               go to state 11


State 1

   15 identifier: IDENTIFIER_TOKEN .
   16 type: IDENTIFIER_TOKEN .

    IDENTIFIER_TOKEN  reduce using rule 16 (type)
    $default          reduce using rule 15 (identifier)


State 2

    0 $accept: start . $end

    $end  shift, and go to state 12


State 3

    1 start: global_statements .

    $default  reduce using rule 1 (start)


State 4

   46 global_statement: function_declaration .

    $default  reduce using rule 46 (global_statement)


State 5

   12 function_declaration: function_decl_statement . '{' local_statements '}'
   13                     | function_decl_statement . ';'

    ';'  shift, and go to state 13
    '{'  shift, and go to state 14


State 6

   49 lvalue_expression: identifier .

    $default  reduce using rule 49 (lvalue_expression)


State 7

   14 function_decl_statement: type . identifier '(' arguments_decl ')'
   50 declaration_expression: type . identifier

    IDENTIFIER_TOKEN  shift, and go to state 15

    identifier  go to state 16


State 8

    2 global_statements: global_statement . global_statements

    IDENTIFIER_TOKEN  shift, and go to state 1

    $default  reduce using rule 3 (global_statements)

    global_statements        go to state 17
    function_declaration     go to state 4
    function_decl_statement  go to state 5
    identifier               go to state 6
    type                     go to state 7
    global_statement         go to state 8
    lvalue_expression        go to state 9
    declaration_expression   go to state 10
    assignment               go to state 11


State 9

   58 assignment: lvalue_expression . '=' expression
   59           | lvalue_expression . PLUS_EQ expression
   60           | lvalue_expression . MIN_EQ expression
   61           | lvalue_expression . MULT_EQ expression
   62           | lvalue_expression . DIV_EQ expression
   63           | lvalue_expression . REM_EQ expression

    PLUS_EQ  shift, and go to state 18
    MIN_EQ   shift, and go to state 19
    MULT_EQ  shift, and go to state 20
    DIV_EQ   shift, and go to state 21
    REM_EQ   shift, and go to state 22
    '='      shift, and go to state 23


State 10

   48 lvalue_expression: declaration_expression .

    $default  reduce using rule 48 (lvalue_expression)


State 11

   47 global_statement: assignment . ';'

    ';'  shift, and go to state 24


State 12

    0 $accept: start $end .

    $default  accept


State 13

   13 function_declaration: function_decl_statement ';' .

    $default  reduce using rule 13 (function_declaration)


State 14

   12 function_declaration: function_decl_statement '{' . local_statements '}'

    IF_TOKEN          shift, and go to state 25
    FOR_TOKEN         shift, and go to state 26
    WHILE_TOKEN       shift, and go to state 27
    RETURN_TOKEN      shift, and go to state 28
    INCREMENT         shift, and go to state 29
    DECREMENT         shift, and go to state 30
    IDENTIFIER_TOKEN  shift, and go to state 1
    INTEGER_TOKEN     shift, and go to state 31
    FLOAT_TOKEN       shift, and go to state 32
    '-'               shift, and go to state 33
    '!'               shift, and go to state 34
    '{'               shift, and go to state 35
    '('               shift, and go to state 36

    $default  reduce using rule 5 (local_statements)

    local_statements         go to state 37
    generic_local_statement  go to state 38
    local_statement          go to state 39
    identifier               go to state 40
    type                     go to state 41
    expression               go to state 42
    literal                  go to state 43
    binary_expr              go to state 44
    lvalue_expression        go to state 45
    declaration_expression   go to state 10
    unary_operation          go to state 46
    assignment               go to state 47
    function_call            go to state 48
    conditional_statement    go to state 49
    if_statement             go to state 50
    return_statement         go to state 51
    block_statement          go to state 52
    loop                     go to state 53
    for_statement            go to state 54
    while_statement          go to state 55


State 15

   15 identifier: IDENTIFIER_TOKEN .

    $default  reduce using rule 15 (identifier)


State 16

   14 function_decl_statement: type identifier . '(' arguments_decl ')'
   50 declaration_expression: type identifier .

    '('  shift, and go to state 56

    $default  reduce using rule 50 (declaration_expression)


State 17

    2 global_statements: global_statement global_statements .

    $default  reduce using rule 2 (global_statements)


State 18

   59 assignment: lvalue_expression PLUS_EQ . expression

    INCREMENT         shift, and go to state 29
    DECREMENT         shift, and go to state 30
    IDENTIFIER_TOKEN  shift, and go to state 1
    INTEGER_TOKEN     shift, and go to state 31
    FLOAT_TOKEN       shift, and go to state 32
    '-'               shift, and go to state 33
    '!'               shift, and go to state 34
    '('               shift, and go to state 36

    identifier              go to state 40
    type                    go to state 41
    expression              go to state 57
    literal                 go to state 43
    binary_expr             go to state 44
    lvalue_expression       go to state 45
    declaration_expression  go to state 10
    unary_operation         go to state 46
    assignment              go to state 47
    function_call           go to state 48


State 19

   60 assignment: lvalue_expression MIN_EQ . expression

    INCREMENT         shift, and go to state 29
    DECREMENT         shift, and go to state 30
    IDENTIFIER_TOKEN  shift, and go to state 1
    INTEGER_TOKEN     shift, and go to state 31
    FLOAT_TOKEN       shift, and go to state 32
    '-'               shift, and go to state 33
    '!'               shift, and go to state 34
    '('               shift, and go to state 36

    identifier              go to state 40
    type                    go to state 41
    expression              go to state 58
    literal                 go to state 43
    binary_expr             go to state 44
    lvalue_expression       go to state 45
    declaration_expression  go to state 10
    unary_operation         go to state 46
    assignment              go to state 47
    function_call           go to state 48


State 20

   61 assignment: lvalue_expression MULT_EQ . expression

    INCREMENT         shift, and go to state 29
    DECREMENT         shift, and go to state 30
    IDENTIFIER_TOKEN  shift, and go to state 1
    INTEGER_TOKEN     shift, and go to state 31
    FLOAT_TOKEN       shift, and go to state 32
    '-'               shift, and go to state 33
    '!'               shift, and go to state 34
    '('               shift, and go to state 36

    identifier              go to state 40
    type                    go to state 41
    expression              go to state 59
    literal                 go to state 43
    binary_expr             go to state 44
    lvalue_expression       go to state 45
    declaration_expression  go to state 10
    unary_operation         go to state 46
    assignment              go to state 47
    function_call           go to state 48


State 21

   62 assignment: lvalue_expression DIV_EQ . expression

    INCREMENT         shift, and go to state 29
    DECREMENT         shift, and go to state 30
    IDENTIFIER_TOKEN  shift, and go to state 1
    INTEGER_TOKEN     shift, and go to state 31
    FLOAT_TOKEN       shift, and go to state 32
    '-'               shift, and go to state 33
    '!'               shift, and go to state 34
    '('               shift, and go to state 36

    identifier              go to state 40
    type                    go to state 41
    expression              go to state 60
    literal                 go to state 43
    binary_expr             go to state 44
    lvalue_expression       go to state 45
    declaration_expression  go to state 10
    unary_operation         go to state 46
    assignment              go to state 47
    function_call           go to state 48


State 22

   63 assignment: lvalue_expression REM_EQ . expression

    INCREMENT         shift, and go to state 29
    DECREMENT         shift, and go to state 30
    IDENTIFIER_TOKEN  shift, and go to state 1
    INTEGER_TOKEN     shift, and go to state 31
    FLOAT_TOKEN       shift, and go to state 32
    '-'               shift, and go to state 33
    '!'               shift, and go to state 34
    '('               shift, and go to state 36

    identifier              go to state 40
    type                    go to state 41
    expression              go to state 61
    literal                 go to state 43
    binary_expr             go to state 44
    lvalue_expression       go to state 45
    declaration_expression  go to state 10
    unary_operation         go to state 46
    assignment              go to state 47
    function_call           go to state 48


State 23

   58 assignment: lvalue_expression '=' . expression

    INCREMENT         shift, and go to state 29
    DECREMENT         shift, and go to state 30
    IDENTIFIER_TOKEN  shift, and go to state 1
    INTEGER_TOKEN     shift, and go to state 31
    FLOAT_TOKEN       shift, and go to state 32
    '-'               shift, and go to state 33
    '!'               shift, and go to state 34
    '('               shift, and go to state 36

    identifier              go to state 40
    type                    go to state 41
    expression              go to state 62
    literal                 go to state 43
    binary_expr             go to state 44
    lvalue_expression       go to state 45
    declaration_expression  go to state 10
    unary_operation         go to state 46
    assignment              go to state 47
    function_call           go to state 48


State 24

   47 global_statement: assignment ';' .

    $default  reduce using rule 47 (global_statement)


State 25

   71 if_statement: IF_TOKEN . '(' expression ')' local_statement

    '('  shift, and go to state 63


State 26

   78 for_statement: FOR_TOKEN . '(' expression ';' expression ';' expression ')' loop_init

    '('  shift, and go to state 64


State 27

   79 while_statement: WHILE_TOKEN . '(' expression ')' loop_init

    '('  shift, and go to state 65


State 28

   73 return_statement: RETURN_TOKEN .
   74                 | RETURN_TOKEN . expression

    INCREMENT         shift, and go to state 29
    DECREMENT         shift, and go to state 30
    IDENTIFIER_TOKEN  shift, and go to state 1
    INTEGER_TOKEN     shift, and go to state 31
    FLOAT_TOKEN       shift, and go to state 32
    '-'               shift, and go to state 33
    '!'               shift, and go to state 34
    '('               shift, and go to state 36

    $default  reduce using rule 73 (return_statement)

    identifier              go to state 40
    type                    go to state 41
    expression              go to state 66
    literal                 go to state 43
    binary_expr             go to state 44
    lvalue_expression       go to state 45
    declaration_expression  go to state 10
    unary_operation         go to state 46
    assignment              go to state 47
    function_call           go to state 48


State 29

   53 unary_operation: INCREMENT . lvalue_expression

    IDENTIFIER_TOKEN  shift, and go to state 1

    identifier              go to state 6
    type                    go to state 41
    lvalue_expression       go to state 67
    declaration_expression  go to state 10


State 30

   55 unary_operation: DECREMENT . lvalue_expression

    IDENTIFIER_TOKEN  shift, and go to state 1

    identifier              go to state 6
    type                    go to state 41
    lvalue_expression       go to state 68
    declaration_expression  go to state 10


State 31

   31 literal: INTEGER_TOKEN .

    $default  reduce using rule 31 (literal)


State 32

   32 literal: FLOAT_TOKEN .

    $default  reduce using rule 32 (literal)


State 33

   57 unary_operation: '-' . expression

    INCREMENT         shift, and go to state 29
    DECREMENT         shift, and go to state 30
    IDENTIFIER_TOKEN  shift, and go to state 1
    INTEGER_TOKEN     shift, and go to state 31
    FLOAT_TOKEN       shift, and go to state 32
    '-'               shift, and go to state 33
    '!'               shift, and go to state 34
    '('               shift, and go to state 36

    identifier              go to state 40
    type                    go to state 41
    expression              go to state 69
    literal                 go to state 43
    binary_expr             go to state 44
    lvalue_expression       go to state 45
    declaration_expression  go to state 10
    unary_operation         go to state 46
    assignment              go to state 47
    function_call           go to state 48


State 34

   56 unary_operation: '!' . expression

    INCREMENT         shift, and go to state 29
    DECREMENT         shift, and go to state 30
    IDENTIFIER_TOKEN  shift, and go to state 1
    INTEGER_TOKEN     shift, and go to state 31
    FLOAT_TOKEN       shift, and go to state 32
    '-'               shift, and go to state 33
    '!'               shift, and go to state 34
    '('               shift, and go to state 36

    identifier              go to state 40
    type                    go to state 41
    expression              go to state 70
    literal                 go to state 43
    binary_expr             go to state 44
    lvalue_expression       go to state 45
    declaration_expression  go to state 10
    unary_operation         go to state 46
    assignment              go to state 47
    function_call           go to state 48


State 35

   75 block_statement: '{' . local_statements '}'

    IF_TOKEN          shift, and go to state 25
    FOR_TOKEN         shift, and go to state 26
    WHILE_TOKEN       shift, and go to state 27
    RETURN_TOKEN      shift, and go to state 28
    INCREMENT         shift, and go to state 29
    DECREMENT         shift, and go to state 30
    IDENTIFIER_TOKEN  shift, and go to state 1
    INTEGER_TOKEN     shift, and go to state 31
    FLOAT_TOKEN       shift, and go to state 32
    '-'               shift, and go to state 33
    '!'               shift, and go to state 34
    '{'               shift, and go to state 35
    '('               shift, and go to state 36

    $default  reduce using rule 5 (local_statements)

    local_statements         go to state 71
    generic_local_statement  go to state 38
    local_statement          go to state 39
    identifier               go to state 40
    type                     go to state 41
    expression               go to state 42
    literal                  go to state 43
    binary_expr              go to state 44
    lvalue_expression        go to state 45
    declaration_expression   go to state 10
    unary_operation          go to state 46
    assignment               go to state 47
    function_call            go to state 48
    conditional_statement    go to state 49
    if_statement             go to state 50
    return_statement         go to state 51
    block_statement          go to state 52
    loop                     go to state 53
    for_statement            go to state 54
    while_statement          go to state 55


State 36

   25 expression: '(' . expression ')'

    INCREMENT         shift, and go to state 29
    DECREMENT         shift, and go to state 30
    IDENTIFIER_TOKEN  shift, and go to state 1
    INTEGER_TOKEN     shift, and go to state 31
    FLOAT_TOKEN       shift, and go to state 32
    '-'               shift, and go to state 33
    '!'               shift, and go to state 34
    '('               shift, and go to state 36

    identifier              go to state 40
    type                    go to state 41
    expression              go to state 72
    literal                 go to state 43
    binary_expr             go to state 44
    lvalue_expression       go to state 45
    declaration_expression  go to state 10
    unary_operation         go to state 46
    assignment              go to state 47
    function_call           go to state 48


State 37

   12 function_declaration: function_decl_statement '{' local_statements . '}'

    '}'  shift, and go to state 73


State 38

   11 local_statement: generic_local_statement .

    $default  reduce using rule 11 (local_statement)


State 39

    4 local_statements: local_statement . local_statements

    IF_TOKEN          shift, and go to state 25
    FOR_TOKEN         shift, and go to state 26
    WHILE_TOKEN       shift, and go to state 27
    RETURN_TOKEN      shift, and go to state 28
    INCREMENT         shift, and go to state 29
    DECREMENT         shift, and go to state 30
    IDENTIFIER_TOKEN  shift, and go to state 1
    INTEGER_TOKEN     shift, and go to state 31
    FLOAT_TOKEN       shift, and go to state 32
    '-'               shift, and go to state 33
    '!'               shift, and go to state 34
    '{'               shift, and go to state 35
    '('               shift, and go to state 36

    $default  reduce using rule 5 (local_statements)

    local_statements         go to state 74
    generic_local_statement  go to state 38
    local_statement          go to state 39
    identifier               go to state 40
    type                     go to state 41
    expression               go to state 42
    literal                  go to state 43
    binary_expr              go to state 44
    lvalue_expression        go to state 45
    declaration_expression   go to state 10
    unary_operation          go to state 46
    assignment               go to state 47
    function_call            go to state 48
    conditional_statement    go to state 49
    if_statement             go to state 50
    return_statement         go to state 51
    block_statement          go to state 52
    loop                     go to state 53
    for_statement            go to state 54
    while_statement          go to state 55


State 40

   49 lvalue_expression: identifier .
   64 function_call: identifier . '(' argument_list ')'

    '('  shift, and go to state 75

    $default  reduce using rule 49 (lvalue_expression)


State 41

   50 declaration_expression: type . identifier

    IDENTIFIER_TOKEN  shift, and go to state 15

    identifier  go to state 76


State 42

    6 generic_local_statement: expression . ';'
   33 binary_expr: expression . '+' expression
   34            | expression . '-' expression
   35            | expression . '*' expression
   36            | expression . '/' expression
   37            | expression . '%' expression
   38            | expression . AND expression
   39            | expression . OR expression
   40            | expression . '<' expression
   41            | expression . '>' expression
   42            | expression . GEQ expression
   43            | expression . LEQ expression
   44            | expression . NEQ expression
   45            | expression . EQ expression

    GEQ  shift, and go to state 77
    LEQ  shift, and go to state 78
    NEQ  shift, and go to state 79
    EQ   shift, and go to state 80
    AND  shift, and go to state 81
    OR   shift, and go to state 82
    '<'  shift, and go to state 83
    '>'  shift, and go to state 84
    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '%'  shift, and go to state 89
    ';'  shift, and go to state 90


State 43

   24 expression: literal .

    $default  reduce using rule 24 (expression)


State 44

   26 expression: binary_expr .

    $default  reduce using rule 26 (expression)


State 45

   30 expression: lvalue_expression .
   52 unary_operation: lvalue_expression . INCREMENT
   54                | lvalue_expression . DECREMENT
   58 assignment: lvalue_expression . '=' expression
   59           | lvalue_expression . PLUS_EQ expression
   60           | lvalue_expression . MIN_EQ expression
   61           | lvalue_expression . MULT_EQ expression
   62           | lvalue_expression . DIV_EQ expression
   63           | lvalue_expression . REM_EQ expression

    PLUS_EQ    shift, and go to state 18
    MIN_EQ     shift, and go to state 19
    MULT_EQ    shift, and go to state 20
    DIV_EQ     shift, and go to state 21
    REM_EQ     shift, and go to state 22
    INCREMENT  shift, and go to state 91
    DECREMENT  shift, and go to state 92
    '='        shift, and go to state 23

    $default  reduce using rule 30 (expression)


State 46

   27 expression: unary_operation .

    $default  reduce using rule 27 (expression)


State 47

   28 expression: assignment .

    $default  reduce using rule 28 (expression)


State 48

   29 expression: function_call .

    $default  reduce using rule 29 (expression)


State 49

    7 generic_local_statement: conditional_statement .

    $default  reduce using rule 7 (generic_local_statement)


State 50

   69 conditional_statement: if_statement . else_statement
   70                      | if_statement .

    ELSE_TOKEN  shift, and go to state 93

    $default  reduce using rule 70 (conditional_statement)

    else_statement  go to state 94


State 51

    9 generic_local_statement: return_statement . ';'

    ';'  shift, and go to state 95


State 52

   10 local_statement: block_statement .

    $default  reduce using rule 10 (local_statement)


State 53

    8 generic_local_statement: loop .

    $default  reduce using rule 8 (generic_local_statement)


State 54

   76 loop: for_statement .

    $default  reduce using rule 76 (loop)


State 55

   77 loop: while_statement .

    $default  reduce using rule 77 (loop)


State 56

   14 function_decl_statement: type identifier '(' . arguments_decl ')'

    IDENTIFIER_TOKEN  shift, and go to state 96

    $default  reduce using rule 20 (arguments_decl)

    type                    go to state 41
    arguments_decl          go to state 97
    argument_decl           go to state 98
    default_arg_decl        go to state 99
    declaration_expression  go to state 100
    declaration_constexpr   go to state 101


State 57

   33 binary_expr: expression . '+' expression
   34            | expression . '-' expression
   35            | expression . '*' expression
   36            | expression . '/' expression
   37            | expression . '%' expression
   38            | expression . AND expression
   39            | expression . OR expression
   40            | expression . '<' expression
   41            | expression . '>' expression
   42            | expression . GEQ expression
   43            | expression . LEQ expression
   44            | expression . NEQ expression
   45            | expression . EQ expression
   59 assignment: lvalue_expression PLUS_EQ expression .

    GEQ  shift, and go to state 77
    LEQ  shift, and go to state 78
    NEQ  shift, and go to state 79
    EQ   shift, and go to state 80
    AND  shift, and go to state 81
    OR   shift, and go to state 82
    '<'  shift, and go to state 83
    '>'  shift, and go to state 84
    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '%'  shift, and go to state 89

    $default  reduce using rule 59 (assignment)


State 58

   33 binary_expr: expression . '+' expression
   34            | expression . '-' expression
   35            | expression . '*' expression
   36            | expression . '/' expression
   37            | expression . '%' expression
   38            | expression . AND expression
   39            | expression . OR expression
   40            | expression . '<' expression
   41            | expression . '>' expression
   42            | expression . GEQ expression
   43            | expression . LEQ expression
   44            | expression . NEQ expression
   45            | expression . EQ expression
   60 assignment: lvalue_expression MIN_EQ expression .

    GEQ  shift, and go to state 77
    LEQ  shift, and go to state 78
    NEQ  shift, and go to state 79
    EQ   shift, and go to state 80
    AND  shift, and go to state 81
    OR   shift, and go to state 82
    '<'  shift, and go to state 83
    '>'  shift, and go to state 84
    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '%'  shift, and go to state 89

    $default  reduce using rule 60 (assignment)


State 59

   33 binary_expr: expression . '+' expression
   34            | expression . '-' expression
   35            | expression . '*' expression
   36            | expression . '/' expression
   37            | expression . '%' expression
   38            | expression . AND expression
   39            | expression . OR expression
   40            | expression . '<' expression
   41            | expression . '>' expression
   42            | expression . GEQ expression
   43            | expression . LEQ expression
   44            | expression . NEQ expression
   45            | expression . EQ expression
   61 assignment: lvalue_expression MULT_EQ expression .

    GEQ  shift, and go to state 77
    LEQ  shift, and go to state 78
    NEQ  shift, and go to state 79
    EQ   shift, and go to state 80
    AND  shift, and go to state 81
    OR   shift, and go to state 82
    '<'  shift, and go to state 83
    '>'  shift, and go to state 84
    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '%'  shift, and go to state 89

    $default  reduce using rule 61 (assignment)


State 60

   33 binary_expr: expression . '+' expression
   34            | expression . '-' expression
   35            | expression . '*' expression
   36            | expression . '/' expression
   37            | expression . '%' expression
   38            | expression . AND expression
   39            | expression . OR expression
   40            | expression . '<' expression
   41            | expression . '>' expression
   42            | expression . GEQ expression
   43            | expression . LEQ expression
   44            | expression . NEQ expression
   45            | expression . EQ expression
   62 assignment: lvalue_expression DIV_EQ expression .

    GEQ  shift, and go to state 77
    LEQ  shift, and go to state 78
    NEQ  shift, and go to state 79
    EQ   shift, and go to state 80
    AND  shift, and go to state 81
    OR   shift, and go to state 82
    '<'  shift, and go to state 83
    '>'  shift, and go to state 84
    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '%'  shift, and go to state 89

    $default  reduce using rule 62 (assignment)


State 61

   33 binary_expr: expression . '+' expression
   34            | expression . '-' expression
   35            | expression . '*' expression
   36            | expression . '/' expression
   37            | expression . '%' expression
   38            | expression . AND expression
   39            | expression . OR expression
   40            | expression . '<' expression
   41            | expression . '>' expression
   42            | expression . GEQ expression
   43            | expression . LEQ expression
   44            | expression . NEQ expression
   45            | expression . EQ expression
   63 assignment: lvalue_expression REM_EQ expression .

    GEQ  shift, and go to state 77
    LEQ  shift, and go to state 78
    NEQ  shift, and go to state 79
    EQ   shift, and go to state 80
    AND  shift, and go to state 81
    OR   shift, and go to state 82
    '<'  shift, and go to state 83
    '>'  shift, and go to state 84
    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '%'  shift, and go to state 89

    $default  reduce using rule 63 (assignment)


State 62

   33 binary_expr: expression . '+' expression
   34            | expression . '-' expression
   35            | expression . '*' expression
   36            | expression . '/' expression
   37            | expression . '%' expression
   38            | expression . AND expression
   39            | expression . OR expression
   40            | expression . '<' expression
   41            | expression . '>' expression
   42            | expression . GEQ expression
   43            | expression . LEQ expression
   44            | expression . NEQ expression
   45            | expression . EQ expression
   58 assignment: lvalue_expression '=' expression .

    GEQ  shift, and go to state 77
    LEQ  shift, and go to state 78
    NEQ  shift, and go to state 79
    EQ   shift, and go to state 80
    AND  shift, and go to state 81
    OR   shift, and go to state 82
    '<'  shift, and go to state 83
    '>'  shift, and go to state 84
    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '%'  shift, and go to state 89

    $default  reduce using rule 58 (assignment)


State 63

   71 if_statement: IF_TOKEN '(' . expression ')' local_statement

    INCREMENT         shift, and go to state 29
    DECREMENT         shift, and go to state 30
    IDENTIFIER_TOKEN  shift, and go to state 1
    INTEGER_TOKEN     shift, and go to state 31
    FLOAT_TOKEN       shift, and go to state 32
    '-'               shift, and go to state 33
    '!'               shift, and go to state 34
    '('               shift, and go to state 36

    identifier              go to state 40
    type                    go to state 41
    expression              go to state 102
    literal                 go to state 43
    binary_expr             go to state 44
    lvalue_expression       go to state 45
    declaration_expression  go to state 10
    unary_operation         go to state 46
    assignment              go to state 47
    function_call           go to state 48


State 64

   78 for_statement: FOR_TOKEN '(' . expression ';' expression ';' expression ')' loop_init

    INCREMENT         shift, and go to state 29
    DECREMENT         shift, and go to state 30
    IDENTIFIER_TOKEN  shift, and go to state 1
    INTEGER_TOKEN     shift, and go to state 31
    FLOAT_TOKEN       shift, and go to state 32
    '-'               shift, and go to state 33
    '!'               shift, and go to state 34
    '('               shift, and go to state 36

    identifier              go to state 40
    type                    go to state 41
    expression              go to state 103
    literal                 go to state 43
    binary_expr             go to state 44
    lvalue_expression       go to state 45
    declaration_expression  go to state 10
    unary_operation         go to state 46
    assignment              go to state 47
    function_call           go to state 48


State 65

   79 while_statement: WHILE_TOKEN '(' . expression ')' loop_init

    INCREMENT         shift, and go to state 29
    DECREMENT         shift, and go to state 30
    IDENTIFIER_TOKEN  shift, and go to state 1
    INTEGER_TOKEN     shift, and go to state 31
    FLOAT_TOKEN       shift, and go to state 32
    '-'               shift, and go to state 33
    '!'               shift, and go to state 34
    '('               shift, and go to state 36

    identifier              go to state 40
    type                    go to state 41
    expression              go to state 104
    literal                 go to state 43
    binary_expr             go to state 44
    lvalue_expression       go to state 45
    declaration_expression  go to state 10
    unary_operation         go to state 46
    assignment              go to state 47
    function_call           go to state 48


State 66

   33 binary_expr: expression . '+' expression
   34            | expression . '-' expression
   35            | expression . '*' expression
   36            | expression . '/' expression
   37            | expression . '%' expression
   38            | expression . AND expression
   39            | expression . OR expression
   40            | expression . '<' expression
   41            | expression . '>' expression
   42            | expression . GEQ expression
   43            | expression . LEQ expression
   44            | expression . NEQ expression
   45            | expression . EQ expression
   74 return_statement: RETURN_TOKEN expression .

    GEQ  shift, and go to state 77
    LEQ  shift, and go to state 78
    NEQ  shift, and go to state 79
    EQ   shift, and go to state 80
    AND  shift, and go to state 81
    OR   shift, and go to state 82
    '<'  shift, and go to state 83
    '>'  shift, and go to state 84
    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '%'  shift, and go to state 89

    $default  reduce using rule 74 (return_statement)


State 67

   53 unary_operation: INCREMENT lvalue_expression .

    $default  reduce using rule 53 (unary_operation)


State 68

   55 unary_operation: DECREMENT lvalue_expression .

    $default  reduce using rule 55 (unary_operation)


State 69

   33 binary_expr: expression . '+' expression
   34            | expression . '-' expression
   35            | expression . '*' expression
   36            | expression . '/' expression
   37            | expression . '%' expression
   38            | expression . AND expression
   39            | expression . OR expression
   40            | expression . '<' expression
   41            | expression . '>' expression
   42            | expression . GEQ expression
   43            | expression . LEQ expression
   44            | expression . NEQ expression
   45            | expression . EQ expression
   57 unary_operation: '-' expression .

    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '%'  shift, and go to state 89

    $default  reduce using rule 57 (unary_operation)


State 70

   33 binary_expr: expression . '+' expression
   34            | expression . '-' expression
   35            | expression . '*' expression
   36            | expression . '/' expression
   37            | expression . '%' expression
   38            | expression . AND expression
   39            | expression . OR expression
   40            | expression . '<' expression
   41            | expression . '>' expression
   42            | expression . GEQ expression
   43            | expression . LEQ expression
   44            | expression . NEQ expression
   45            | expression . EQ expression
   56 unary_operation: '!' expression .

    $default  reduce using rule 56 (unary_operation)


State 71

   75 block_statement: '{' local_statements . '}'

    '}'  shift, and go to state 105


State 72

   25 expression: '(' expression . ')'
   33 binary_expr: expression . '+' expression
   34            | expression . '-' expression
   35            | expression . '*' expression
   36            | expression . '/' expression
   37            | expression . '%' expression
   38            | expression . AND expression
   39            | expression . OR expression
   40            | expression . '<' expression
   41            | expression . '>' expression
   42            | expression . GEQ expression
   43            | expression . LEQ expression
   44            | expression . NEQ expression
   45            | expression . EQ expression

    GEQ  shift, and go to state 77
    LEQ  shift, and go to state 78
    NEQ  shift, and go to state 79
    EQ   shift, and go to state 80
    AND  shift, and go to state 81
    OR   shift, and go to state 82
    '<'  shift, and go to state 83
    '>'  shift, and go to state 84
    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '%'  shift, and go to state 89
    ')'  shift, and go to state 106


State 73

   12 function_declaration: function_decl_statement '{' local_statements '}' .

    $default  reduce using rule 12 (function_declaration)


State 74

    4 local_statements: local_statement local_statements .

    $default  reduce using rule 4 (local_statements)


State 75

   64 function_call: identifier '(' . argument_list ')'

    INCREMENT         shift, and go to state 29
    DECREMENT         shift, and go to state 30
    IDENTIFIER_TOKEN  shift, and go to state 1
    INTEGER_TOKEN     shift, and go to state 31
    FLOAT_TOKEN       shift, and go to state 32
    '-'               shift, and go to state 33
    '!'               shift, and go to state 34
    '('               shift, and go to state 36

    $default  reduce using rule 67 (argument_list)

    identifier              go to state 40
    type                    go to state 41
    expression              go to state 107
    literal                 go to state 43
    binary_expr             go to state 44
    lvalue_expression       go to state 45
    declaration_expression  go to state 10
    unary_operation         go to state 46
    assignment              go to state 47
    function_call           go to state 48
    argument_list           go to state 108
    argument                go to state 109


State 76

   50 declaration_expression: type identifier .

    $default  reduce using rule 50 (declaration_expression)


State 77

   42 binary_expr: expression GEQ . expression

    INCREMENT         shift, and go to state 29
    DECREMENT         shift, and go to state 30
    IDENTIFIER_TOKEN  shift, and go to state 1
    INTEGER_TOKEN     shift, and go to state 31
    FLOAT_TOKEN       shift, and go to state 32
    '-'               shift, and go to state 33
    '!'               shift, and go to state 34
    '('               shift, and go to state 36

    identifier              go to state 40
    type                    go to state 41
    expression              go to state 110
    literal                 go to state 43
    binary_expr             go to state 44
    lvalue_expression       go to state 45
    declaration_expression  go to state 10
    unary_operation         go to state 46
    assignment              go to state 47
    function_call           go to state 48


State 78

   43 binary_expr: expression LEQ . expression

    INCREMENT         shift, and go to state 29
    DECREMENT         shift, and go to state 30
    IDENTIFIER_TOKEN  shift, and go to state 1
    INTEGER_TOKEN     shift, and go to state 31
    FLOAT_TOKEN       shift, and go to state 32
    '-'               shift, and go to state 33
    '!'               shift, and go to state 34
    '('               shift, and go to state 36

    identifier              go to state 40
    type                    go to state 41
    expression              go to state 111
    literal                 go to state 43
    binary_expr             go to state 44
    lvalue_expression       go to state 45
    declaration_expression  go to state 10
    unary_operation         go to state 46
    assignment              go to state 47
    function_call           go to state 48


State 79

   44 binary_expr: expression NEQ . expression

    INCREMENT         shift, and go to state 29
    DECREMENT         shift, and go to state 30
    IDENTIFIER_TOKEN  shift, and go to state 1
    INTEGER_TOKEN     shift, and go to state 31
    FLOAT_TOKEN       shift, and go to state 32
    '-'               shift, and go to state 33
    '!'               shift, and go to state 34
    '('               shift, and go to state 36

    identifier              go to state 40
    type                    go to state 41
    expression              go to state 112
    literal                 go to state 43
    binary_expr             go to state 44
    lvalue_expression       go to state 45
    declaration_expression  go to state 10
    unary_operation         go to state 46
    assignment              go to state 47
    function_call           go to state 48


State 80

   45 binary_expr: expression EQ . expression

    INCREMENT         shift, and go to state 29
    DECREMENT         shift, and go to state 30
    IDENTIFIER_TOKEN  shift, and go to state 1
    INTEGER_TOKEN     shift, and go to state 31
    FLOAT_TOKEN       shift, and go to state 32
    '-'               shift, and go to state 33
    '!'               shift, and go to state 34
    '('               shift, and go to state 36

    identifier              go to state 40
    type                    go to state 41
    expression              go to state 113
    literal                 go to state 43
    binary_expr             go to state 44
    lvalue_expression       go to state 45
    declaration_expression  go to state 10
    unary_operation         go to state 46
    assignment              go to state 47
    function_call           go to state 48


State 81

   38 binary_expr: expression AND . expression

    INCREMENT         shift, and go to state 29
    DECREMENT         shift, and go to state 30
    IDENTIFIER_TOKEN  shift, and go to state 1
    INTEGER_TOKEN     shift, and go to state 31
    FLOAT_TOKEN       shift, and go to state 32
    '-'               shift, and go to state 33
    '!'               shift, and go to state 34
    '('               shift, and go to state 36

    identifier              go to state 40
    type                    go to state 41
    expression              go to state 114
    literal                 go to state 43
    binary_expr             go to state 44
    lvalue_expression       go to state 45
    declaration_expression  go to state 10
    unary_operation         go to state 46
    assignment              go to state 47
    function_call           go to state 48


State 82

   39 binary_expr: expression OR . expression

    INCREMENT         shift, and go to state 29
    DECREMENT         shift, and go to state 30
    IDENTIFIER_TOKEN  shift, and go to state 1
    INTEGER_TOKEN     shift, and go to state 31
    FLOAT_TOKEN       shift, and go to state 32
    '-'               shift, and go to state 33
    '!'               shift, and go to state 34
    '('               shift, and go to state 36

    identifier              go to state 40
    type                    go to state 41
    expression              go to state 115
    literal                 go to state 43
    binary_expr             go to state 44
    lvalue_expression       go to state 45
    declaration_expression  go to state 10
    unary_operation         go to state 46
    assignment              go to state 47
    function_call           go to state 48


State 83

   40 binary_expr: expression '<' . expression

    INCREMENT         shift, and go to state 29
    DECREMENT         shift, and go to state 30
    IDENTIFIER_TOKEN  shift, and go to state 1
    INTEGER_TOKEN     shift, and go to state 31
    FLOAT_TOKEN       shift, and go to state 32
    '-'               shift, and go to state 33
    '!'               shift, and go to state 34
    '('               shift, and go to state 36

    identifier              go to state 40
    type                    go to state 41
    expression              go to state 116
    literal                 go to state 43
    binary_expr             go to state 44
    lvalue_expression       go to state 45
    declaration_expression  go to state 10
    unary_operation         go to state 46
    assignment              go to state 47
    function_call           go to state 48


State 84

   41 binary_expr: expression '>' . expression

    INCREMENT         shift, and go to state 29
    DECREMENT         shift, and go to state 30
    IDENTIFIER_TOKEN  shift, and go to state 1
    INTEGER_TOKEN     shift, and go to state 31
    FLOAT_TOKEN       shift, and go to state 32
    '-'               shift, and go to state 33
    '!'               shift, and go to state 34
    '('               shift, and go to state 36

    identifier              go to state 40
    type                    go to state 41
    expression              go to state 117
    literal                 go to state 43
    binary_expr             go to state 44
    lvalue_expression       go to state 45
    declaration_expression  go to state 10
    unary_operation         go to state 46
    assignment              go to state 47
    function_call           go to state 48


State 85

   33 binary_expr: expression '+' . expression

    INCREMENT         shift, and go to state 29
    DECREMENT         shift, and go to state 30
    IDENTIFIER_TOKEN  shift, and go to state 1
    INTEGER_TOKEN     shift, and go to state 31
    FLOAT_TOKEN       shift, and go to state 32
    '-'               shift, and go to state 33
    '!'               shift, and go to state 34
    '('               shift, and go to state 36

    identifier              go to state 40
    type                    go to state 41
    expression              go to state 118
    literal                 go to state 43
    binary_expr             go to state 44
    lvalue_expression       go to state 45
    declaration_expression  go to state 10
    unary_operation         go to state 46
    assignment              go to state 47
    function_call           go to state 48


State 86

   34 binary_expr: expression '-' . expression

    INCREMENT         shift, and go to state 29
    DECREMENT         shift, and go to state 30
    IDENTIFIER_TOKEN  shift, and go to state 1
    INTEGER_TOKEN     shift, and go to state 31
    FLOAT_TOKEN       shift, and go to state 32
    '-'               shift, and go to state 33
    '!'               shift, and go to state 34
    '('               shift, and go to state 36

    identifier              go to state 40
    type                    go to state 41
    expression              go to state 119
    literal                 go to state 43
    binary_expr             go to state 44
    lvalue_expression       go to state 45
    declaration_expression  go to state 10
    unary_operation         go to state 46
    assignment              go to state 47
    function_call           go to state 48


State 87

   35 binary_expr: expression '*' . expression

    INCREMENT         shift, and go to state 29
    DECREMENT         shift, and go to state 30
    IDENTIFIER_TOKEN  shift, and go to state 1
    INTEGER_TOKEN     shift, and go to state 31
    FLOAT_TOKEN       shift, and go to state 32
    '-'               shift, and go to state 33
    '!'               shift, and go to state 34
    '('               shift, and go to state 36

    identifier              go to state 40
    type                    go to state 41
    expression              go to state 120
    literal                 go to state 43
    binary_expr             go to state 44
    lvalue_expression       go to state 45
    declaration_expression  go to state 10
    unary_operation         go to state 46
    assignment              go to state 47
    function_call           go to state 48


State 88

   36 binary_expr: expression '/' . expression

    INCREMENT         shift, and go to state 29
    DECREMENT         shift, and go to state 30
    IDENTIFIER_TOKEN  shift, and go to state 1
    INTEGER_TOKEN     shift, and go to state 31
    FLOAT_TOKEN       shift, and go to state 32
    '-'               shift, and go to state 33
    '!'               shift, and go to state 34
    '('               shift, and go to state 36

    identifier              go to state 40
    type                    go to state 41
    expression              go to state 121
    literal                 go to state 43
    binary_expr             go to state 44
    lvalue_expression       go to state 45
    declaration_expression  go to state 10
    unary_operation         go to state 46
    assignment              go to state 47
    function_call           go to state 48


State 89

   37 binary_expr: expression '%' . expression

    INCREMENT         shift, and go to state 29
    DECREMENT         shift, and go to state 30
    IDENTIFIER_TOKEN  shift, and go to state 1
    INTEGER_TOKEN     shift, and go to state 31
    FLOAT_TOKEN       shift, and go to state 32
    '-'               shift, and go to state 33
    '!'               shift, and go to state 34
    '('               shift, and go to state 36

    identifier              go to state 40
    type                    go to state 41
    expression              go to state 122
    literal                 go to state 43
    binary_expr             go to state 44
    lvalue_expression       go to state 45
    declaration_expression  go to state 10
    unary_operation         go to state 46
    assignment              go to state 47
    function_call           go to state 48


State 90

    6 generic_local_statement: expression ';' .

    $default  reduce using rule 6 (generic_local_statement)


State 91

   52 unary_operation: lvalue_expression INCREMENT .

    $default  reduce using rule 52 (unary_operation)


State 92

   54 unary_operation: lvalue_expression DECREMENT .

    $default  reduce using rule 54 (unary_operation)


State 93

   72 else_statement: ELSE_TOKEN . local_statement

    IF_TOKEN          shift, and go to state 25
    FOR_TOKEN         shift, and go to state 26
    WHILE_TOKEN       shift, and go to state 27
    RETURN_TOKEN      shift, and go to state 28
    INCREMENT         shift, and go to state 29
    DECREMENT         shift, and go to state 30
    IDENTIFIER_TOKEN  shift, and go to state 1
    INTEGER_TOKEN     shift, and go to state 31
    FLOAT_TOKEN       shift, and go to state 32
    '-'               shift, and go to state 33
    '!'               shift, and go to state 34
    '{'               shift, and go to state 35
    '('               shift, and go to state 36

    generic_local_statement  go to state 38
    local_statement          go to state 123
    identifier               go to state 40
    type                     go to state 41
    expression               go to state 42
    literal                  go to state 43
    binary_expr              go to state 44
    lvalue_expression        go to state 45
    declaration_expression   go to state 10
    unary_operation          go to state 46
    assignment               go to state 47
    function_call            go to state 48
    conditional_statement    go to state 49
    if_statement             go to state 50
    return_statement         go to state 51
    block_statement          go to state 52
    loop                     go to state 53
    for_statement            go to state 54
    while_statement          go to state 55


State 94

   69 conditional_statement: if_statement else_statement .

    $default  reduce using rule 69 (conditional_statement)


State 95

    9 generic_local_statement: return_statement ';' .

    $default  reduce using rule 9 (generic_local_statement)


State 96

   16 type: IDENTIFIER_TOKEN .

    $default  reduce using rule 16 (type)


State 97

   14 function_decl_statement: type identifier '(' arguments_decl . ')'

    ')'  shift, and go to state 124


State 98

   17 arguments_decl: argument_decl . ',' arguments_decl
   18               | argument_decl .

    ','  shift, and go to state 125

    $default  reduce using rule 18 (arguments_decl)


State 99

   19 arguments_decl: default_arg_decl .

    $default  reduce using rule 19 (arguments_decl)


State 100

   21 argument_decl: declaration_expression .
   51 declaration_constexpr: declaration_expression . '=' literal

    '='  shift, and go to state 126

    $default  reduce using rule 21 (argument_decl)


State 101

   22 default_arg_decl: declaration_constexpr . ',' default_arg_decl
   23                 | declaration_constexpr .

    ','  shift, and go to state 127

    $default  reduce using rule 23 (default_arg_decl)


State 102

   33 binary_expr: expression . '+' expression
   34            | expression . '-' expression
   35            | expression . '*' expression
   36            | expression . '/' expression
   37            | expression . '%' expression
   38            | expression . AND expression
   39            | expression . OR expression
   40            | expression . '<' expression
   41            | expression . '>' expression
   42            | expression . GEQ expression
   43            | expression . LEQ expression
   44            | expression . NEQ expression
   45            | expression . EQ expression
   71 if_statement: IF_TOKEN '(' expression . ')' local_statement

    GEQ  shift, and go to state 77
    LEQ  shift, and go to state 78
    NEQ  shift, and go to state 79
    EQ   shift, and go to state 80
    AND  shift, and go to state 81
    OR   shift, and go to state 82
    '<'  shift, and go to state 83
    '>'  shift, and go to state 84
    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '%'  shift, and go to state 89
    ')'  shift, and go to state 128


State 103

   33 binary_expr: expression . '+' expression
   34            | expression . '-' expression
   35            | expression . '*' expression
   36            | expression . '/' expression
   37            | expression . '%' expression
   38            | expression . AND expression
   39            | expression . OR expression
   40            | expression . '<' expression
   41            | expression . '>' expression
   42            | expression . GEQ expression
   43            | expression . LEQ expression
   44            | expression . NEQ expression
   45            | expression . EQ expression
   78 for_statement: FOR_TOKEN '(' expression . ';' expression ';' expression ')' loop_init

    GEQ  shift, and go to state 77
    LEQ  shift, and go to state 78
    NEQ  shift, and go to state 79
    EQ   shift, and go to state 80
    AND  shift, and go to state 81
    OR   shift, and go to state 82
    '<'  shift, and go to state 83
    '>'  shift, and go to state 84
    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '%'  shift, and go to state 89
    ';'  shift, and go to state 129


State 104

   33 binary_expr: expression . '+' expression
   34            | expression . '-' expression
   35            | expression . '*' expression
   36            | expression . '/' expression
   37            | expression . '%' expression
   38            | expression . AND expression
   39            | expression . OR expression
   40            | expression . '<' expression
   41            | expression . '>' expression
   42            | expression . GEQ expression
   43            | expression . LEQ expression
   44            | expression . NEQ expression
   45            | expression . EQ expression
   79 while_statement: WHILE_TOKEN '(' expression . ')' loop_init

    GEQ  shift, and go to state 77
    LEQ  shift, and go to state 78
    NEQ  shift, and go to state 79
    EQ   shift, and go to state 80
    AND  shift, and go to state 81
    OR   shift, and go to state 82
    '<'  shift, and go to state 83
    '>'  shift, and go to state 84
    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '%'  shift, and go to state 89
    ')'  shift, and go to state 130


State 105

   75 block_statement: '{' local_statements '}' .

    $default  reduce using rule 75 (block_statement)


State 106

   25 expression: '(' expression ')' .

    $default  reduce using rule 25 (expression)


State 107

   33 binary_expr: expression . '+' expression
   34            | expression . '-' expression
   35            | expression . '*' expression
   36            | expression . '/' expression
   37            | expression . '%' expression
   38            | expression . AND expression
   39            | expression . OR expression
   40            | expression . '<' expression
   41            | expression . '>' expression
   42            | expression . GEQ expression
   43            | expression . LEQ expression
   44            | expression . NEQ expression
   45            | expression . EQ expression
   68 argument: expression .

    GEQ  shift, and go to state 77
    LEQ  shift, and go to state 78
    NEQ  shift, and go to state 79
    EQ   shift, and go to state 80
    AND  shift, and go to state 81
    OR   shift, and go to state 82
    '<'  shift, and go to state 83
    '>'  shift, and go to state 84
    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '%'  shift, and go to state 89

    $default  reduce using rule 68 (argument)


State 108

   64 function_call: identifier '(' argument_list . ')'

    ')'  shift, and go to state 131


State 109

   65 argument_list: argument . ',' argument_list
   66              | argument .

    ','  shift, and go to state 132

    $default  reduce using rule 66 (argument_list)


State 110

   33 binary_expr: expression . '+' expression
   34            | expression . '-' expression
   35            | expression . '*' expression
   36            | expression . '/' expression
   37            | expression . '%' expression
   38            | expression . AND expression
   39            | expression . OR expression
   40            | expression . '<' expression
   41            | expression . '>' expression
   42            | expression . GEQ expression
   42            | expression GEQ expression .
   43            | expression . LEQ expression
   44            | expression . NEQ expression
   45            | expression . EQ expression

    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '%'  shift, and go to state 89

    GEQ  error (nonassociative)
    LEQ  error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)
    '<'  error (nonassociative)
    '>'  error (nonassociative)

    $default  reduce using rule 42 (binary_expr)


State 111

   33 binary_expr: expression . '+' expression
   34            | expression . '-' expression
   35            | expression . '*' expression
   36            | expression . '/' expression
   37            | expression . '%' expression
   38            | expression . AND expression
   39            | expression . OR expression
   40            | expression . '<' expression
   41            | expression . '>' expression
   42            | expression . GEQ expression
   43            | expression . LEQ expression
   43            | expression LEQ expression .
   44            | expression . NEQ expression
   45            | expression . EQ expression

    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '%'  shift, and go to state 89

    GEQ  error (nonassociative)
    LEQ  error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)
    '<'  error (nonassociative)
    '>'  error (nonassociative)

    $default  reduce using rule 43 (binary_expr)


State 112

   33 binary_expr: expression . '+' expression
   34            | expression . '-' expression
   35            | expression . '*' expression
   36            | expression . '/' expression
   37            | expression . '%' expression
   38            | expression . AND expression
   39            | expression . OR expression
   40            | expression . '<' expression
   41            | expression . '>' expression
   42            | expression . GEQ expression
   43            | expression . LEQ expression
   44            | expression . NEQ expression
   44            | expression NEQ expression .
   45            | expression . EQ expression

    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '%'  shift, and go to state 89

    GEQ  error (nonassociative)
    LEQ  error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)
    '<'  error (nonassociative)
    '>'  error (nonassociative)

    $default  reduce using rule 44 (binary_expr)


State 113

   33 binary_expr: expression . '+' expression
   34            | expression . '-' expression
   35            | expression . '*' expression
   36            | expression . '/' expression
   37            | expression . '%' expression
   38            | expression . AND expression
   39            | expression . OR expression
   40            | expression . '<' expression
   41            | expression . '>' expression
   42            | expression . GEQ expression
   43            | expression . LEQ expression
   44            | expression . NEQ expression
   45            | expression . EQ expression
   45            | expression EQ expression .

    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '%'  shift, and go to state 89

    GEQ  error (nonassociative)
    LEQ  error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)
    '<'  error (nonassociative)
    '>'  error (nonassociative)

    $default  reduce using rule 45 (binary_expr)


State 114

   33 binary_expr: expression . '+' expression
   34            | expression . '-' expression
   35            | expression . '*' expression
   36            | expression . '/' expression
   37            | expression . '%' expression
   38            | expression . AND expression
   38            | expression AND expression .
   39            | expression . OR expression
   40            | expression . '<' expression
   41            | expression . '>' expression
   42            | expression . GEQ expression
   43            | expression . LEQ expression
   44            | expression . NEQ expression
   45            | expression . EQ expression

    GEQ  shift, and go to state 77
    LEQ  shift, and go to state 78
    NEQ  shift, and go to state 79
    EQ   shift, and go to state 80
    '<'  shift, and go to state 83
    '>'  shift, and go to state 84
    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '%'  shift, and go to state 89

    $default  reduce using rule 38 (binary_expr)


State 115

   33 binary_expr: expression . '+' expression
   34            | expression . '-' expression
   35            | expression . '*' expression
   36            | expression . '/' expression
   37            | expression . '%' expression
   38            | expression . AND expression
   39            | expression . OR expression
   39            | expression OR expression .
   40            | expression . '<' expression
   41            | expression . '>' expression
   42            | expression . GEQ expression
   43            | expression . LEQ expression
   44            | expression . NEQ expression
   45            | expression . EQ expression

    GEQ  shift, and go to state 77
    LEQ  shift, and go to state 78
    NEQ  shift, and go to state 79
    EQ   shift, and go to state 80
    AND  shift, and go to state 81
    '<'  shift, and go to state 83
    '>'  shift, and go to state 84
    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '%'  shift, and go to state 89

    $default  reduce using rule 39 (binary_expr)


State 116

   33 binary_expr: expression . '+' expression
   34            | expression . '-' expression
   35            | expression . '*' expression
   36            | expression . '/' expression
   37            | expression . '%' expression
   38            | expression . AND expression
   39            | expression . OR expression
   40            | expression . '<' expression
   40            | expression '<' expression .
   41            | expression . '>' expression
   42            | expression . GEQ expression
   43            | expression . LEQ expression
   44            | expression . NEQ expression
   45            | expression . EQ expression

    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '%'  shift, and go to state 89

    GEQ  error (nonassociative)
    LEQ  error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)
    '<'  error (nonassociative)
    '>'  error (nonassociative)

    $default  reduce using rule 40 (binary_expr)


State 117

   33 binary_expr: expression . '+' expression
   34            | expression . '-' expression
   35            | expression . '*' expression
   36            | expression . '/' expression
   37            | expression . '%' expression
   38            | expression . AND expression
   39            | expression . OR expression
   40            | expression . '<' expression
   41            | expression . '>' expression
   41            | expression '>' expression .
   42            | expression . GEQ expression
   43            | expression . LEQ expression
   44            | expression . NEQ expression
   45            | expression . EQ expression

    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '%'  shift, and go to state 89

    GEQ  error (nonassociative)
    LEQ  error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)
    '<'  error (nonassociative)
    '>'  error (nonassociative)

    $default  reduce using rule 41 (binary_expr)


State 118

   33 binary_expr: expression . '+' expression
   33            | expression '+' expression .
   34            | expression . '-' expression
   35            | expression . '*' expression
   36            | expression . '/' expression
   37            | expression . '%' expression
   38            | expression . AND expression
   39            | expression . OR expression
   40            | expression . '<' expression
   41            | expression . '>' expression
   42            | expression . GEQ expression
   43            | expression . LEQ expression
   44            | expression . NEQ expression
   45            | expression . EQ expression

    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '%'  shift, and go to state 89

    $default  reduce using rule 33 (binary_expr)


State 119

   33 binary_expr: expression . '+' expression
   34            | expression . '-' expression
   34            | expression '-' expression .
   35            | expression . '*' expression
   36            | expression . '/' expression
   37            | expression . '%' expression
   38            | expression . AND expression
   39            | expression . OR expression
   40            | expression . '<' expression
   41            | expression . '>' expression
   42            | expression . GEQ expression
   43            | expression . LEQ expression
   44            | expression . NEQ expression
   45            | expression . EQ expression

    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '%'  shift, and go to state 89

    $default  reduce using rule 34 (binary_expr)


State 120

   33 binary_expr: expression . '+' expression
   34            | expression . '-' expression
   35            | expression . '*' expression
   35            | expression '*' expression .
   36            | expression . '/' expression
   37            | expression . '%' expression
   38            | expression . AND expression
   39            | expression . OR expression
   40            | expression . '<' expression
   41            | expression . '>' expression
   42            | expression . GEQ expression
   43            | expression . LEQ expression
   44            | expression . NEQ expression
   45            | expression . EQ expression

    $default  reduce using rule 35 (binary_expr)


State 121

   33 binary_expr: expression . '+' expression
   34            | expression . '-' expression
   35            | expression . '*' expression
   36            | expression . '/' expression
   36            | expression '/' expression .
   37            | expression . '%' expression
   38            | expression . AND expression
   39            | expression . OR expression
   40            | expression . '<' expression
   41            | expression . '>' expression
   42            | expression . GEQ expression
   43            | expression . LEQ expression
   44            | expression . NEQ expression
   45            | expression . EQ expression

    $default  reduce using rule 36 (binary_expr)


State 122

   33 binary_expr: expression . '+' expression
   34            | expression . '-' expression
   35            | expression . '*' expression
   36            | expression . '/' expression
   37            | expression . '%' expression
   37            | expression '%' expression .
   38            | expression . AND expression
   39            | expression . OR expression
   40            | expression . '<' expression
   41            | expression . '>' expression
   42            | expression . GEQ expression
   43            | expression . LEQ expression
   44            | expression . NEQ expression
   45            | expression . EQ expression

    $default  reduce using rule 37 (binary_expr)


State 123

   72 else_statement: ELSE_TOKEN local_statement .

    $default  reduce using rule 72 (else_statement)


State 124

   14 function_decl_statement: type identifier '(' arguments_decl ')' .

    $default  reduce using rule 14 (function_decl_statement)


State 125

   17 arguments_decl: argument_decl ',' . arguments_decl

    IDENTIFIER_TOKEN  shift, and go to state 96

    $default  reduce using rule 20 (arguments_decl)

    type                    go to state 41
    arguments_decl          go to state 133
    argument_decl           go to state 98
    default_arg_decl        go to state 99
    declaration_expression  go to state 100
    declaration_constexpr   go to state 101


State 126

   51 declaration_constexpr: declaration_expression '=' . literal

    INTEGER_TOKEN  shift, and go to state 31
    FLOAT_TOKEN    shift, and go to state 32

    literal  go to state 134


State 127

   22 default_arg_decl: declaration_constexpr ',' . default_arg_decl

    IDENTIFIER_TOKEN  shift, and go to state 96

    type                    go to state 41
    default_arg_decl        go to state 135
    declaration_expression  go to state 136
    declaration_constexpr   go to state 101


State 128

   71 if_statement: IF_TOKEN '(' expression ')' . local_statement

    IF_TOKEN          shift, and go to state 25
    FOR_TOKEN         shift, and go to state 26
    WHILE_TOKEN       shift, and go to state 27
    RETURN_TOKEN      shift, and go to state 28
    INCREMENT         shift, and go to state 29
    DECREMENT         shift, and go to state 30
    IDENTIFIER_TOKEN  shift, and go to state 1
    INTEGER_TOKEN     shift, and go to state 31
    FLOAT_TOKEN       shift, and go to state 32
    '-'               shift, and go to state 33
    '!'               shift, and go to state 34
    '{'               shift, and go to state 35
    '('               shift, and go to state 36

    generic_local_statement  go to state 38
    local_statement          go to state 137
    identifier               go to state 40
    type                     go to state 41
    expression               go to state 42
    literal                  go to state 43
    binary_expr              go to state 44
    lvalue_expression        go to state 45
    declaration_expression   go to state 10
    unary_operation          go to state 46
    assignment               go to state 47
    function_call            go to state 48
    conditional_statement    go to state 49
    if_statement             go to state 50
    return_statement         go to state 51
    block_statement          go to state 52
    loop                     go to state 53
    for_statement            go to state 54
    while_statement          go to state 55


State 129

   78 for_statement: FOR_TOKEN '(' expression ';' . expression ';' expression ')' loop_init

    INCREMENT         shift, and go to state 29
    DECREMENT         shift, and go to state 30
    IDENTIFIER_TOKEN  shift, and go to state 1
    INTEGER_TOKEN     shift, and go to state 31
    FLOAT_TOKEN       shift, and go to state 32
    '-'               shift, and go to state 33
    '!'               shift, and go to state 34
    '('               shift, and go to state 36

    identifier              go to state 40
    type                    go to state 41
    expression              go to state 138
    literal                 go to state 43
    binary_expr             go to state 44
    lvalue_expression       go to state 45
    declaration_expression  go to state 10
    unary_operation         go to state 46
    assignment              go to state 47
    function_call           go to state 48


State 130

   79 while_statement: WHILE_TOKEN '(' expression ')' . loop_init

    IF_TOKEN          shift, and go to state 25
    FOR_TOKEN         shift, and go to state 26
    WHILE_TOKEN       shift, and go to state 27
    BREAK_TOKEN       shift, and go to state 139
    RETURN_TOKEN      shift, and go to state 28
    INCREMENT         shift, and go to state 29
    DECREMENT         shift, and go to state 30
    IDENTIFIER_TOKEN  shift, and go to state 1
    INTEGER_TOKEN     shift, and go to state 31
    FLOAT_TOKEN       shift, and go to state 32
    '-'               shift, and go to state 33
    '!'               shift, and go to state 34
    '{'               shift, and go to state 140
    '('               shift, and go to state 36

    generic_local_statement  go to state 141
    identifier               go to state 40
    type                     go to state 41
    expression               go to state 42
    literal                  go to state 43
    binary_expr              go to state 44
    lvalue_expression        go to state 45
    declaration_expression   go to state 10
    unary_operation          go to state 46
    assignment               go to state 47
    function_call            go to state 48
    conditional_statement    go to state 49
    if_statement             go to state 50
    return_statement         go to state 51
    loop                     go to state 53
    for_statement            go to state 54
    while_statement          go to state 55
    loop_init                go to state 142
    loop_block               go to state 143
    break_statement          go to state 144


State 131

   64 function_call: identifier '(' argument_list ')' .

    $default  reduce using rule 64 (function_call)


State 132

   65 argument_list: argument ',' . argument_list

    INCREMENT         shift, and go to state 29
    DECREMENT         shift, and go to state 30
    IDENTIFIER_TOKEN  shift, and go to state 1
    INTEGER_TOKEN     shift, and go to state 31
    FLOAT_TOKEN       shift, and go to state 32
    '-'               shift, and go to state 33
    '!'               shift, and go to state 34
    '('               shift, and go to state 36

    $default  reduce using rule 67 (argument_list)

    identifier              go to state 40
    type                    go to state 41
    expression              go to state 107
    literal                 go to state 43
    binary_expr             go to state 44
    lvalue_expression       go to state 45
    declaration_expression  go to state 10
    unary_operation         go to state 46
    assignment              go to state 47
    function_call           go to state 48
    argument_list           go to state 145
    argument                go to state 109


State 133

   17 arguments_decl: argument_decl ',' arguments_decl .

    $default  reduce using rule 17 (arguments_decl)


State 134

   51 declaration_constexpr: declaration_expression '=' literal .

    $default  reduce using rule 51 (declaration_constexpr)


State 135

   22 default_arg_decl: declaration_constexpr ',' default_arg_decl .

    $default  reduce using rule 22 (default_arg_decl)


State 136

   51 declaration_constexpr: declaration_expression . '=' literal

    '='  shift, and go to state 126


State 137

   71 if_statement: IF_TOKEN '(' expression ')' local_statement .

    $default  reduce using rule 71 (if_statement)


State 138

   33 binary_expr: expression . '+' expression
   34            | expression . '-' expression
   35            | expression . '*' expression
   36            | expression . '/' expression
   37            | expression . '%' expression
   38            | expression . AND expression
   39            | expression . OR expression
   40            | expression . '<' expression
   41            | expression . '>' expression
   42            | expression . GEQ expression
   43            | expression . LEQ expression
   44            | expression . NEQ expression
   45            | expression . EQ expression
   78 for_statement: FOR_TOKEN '(' expression ';' expression . ';' expression ')' loop_init

    GEQ  shift, and go to state 77
    LEQ  shift, and go to state 78
    NEQ  shift, and go to state 79
    EQ   shift, and go to state 80
    AND  shift, and go to state 81
    OR   shift, and go to state 82
    '<'  shift, and go to state 83
    '>'  shift, and go to state 84
    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '%'  shift, and go to state 89
    ';'  shift, and go to state 146


State 139

   88 break_statement: BREAK_TOKEN . ';'

    ';'  shift, and go to state 147


State 140

   85 loop_block: '{' . loop_statements '}'

    IF_TOKEN          shift, and go to state 25
    FOR_TOKEN         shift, and go to state 26
    WHILE_TOKEN       shift, and go to state 27
    BREAK_TOKEN       shift, and go to state 139
    RETURN_TOKEN      shift, and go to state 28
    INCREMENT         shift, and go to state 29
    DECREMENT         shift, and go to state 30
    IDENTIFIER_TOKEN  shift, and go to state 1
    INTEGER_TOKEN     shift, and go to state 31
    FLOAT_TOKEN       shift, and go to state 32
    '-'               shift, and go to state 33
    '!'               shift, and go to state 34
    '{'               shift, and go to state 35
    '('               shift, and go to state 36

    generic_local_statement  go to state 38
    local_statement          go to state 148
    identifier               go to state 40
    type                     go to state 41
    expression               go to state 42
    literal                  go to state 43
    binary_expr              go to state 44
    lvalue_expression        go to state 45
    declaration_expression   go to state 10
    unary_operation          go to state 46
    assignment               go to state 47
    function_call            go to state 48
    conditional_statement    go to state 49
    if_statement             go to state 50
    return_statement         go to state 51
    block_statement          go to state 52
    loop                     go to state 53
    for_statement            go to state 54
    while_statement          go to state 55
    loop_statements          go to state 149
    loop_statement           go to state 150
    break_statement          go to state 151


State 141

   80 loop_init: generic_local_statement .

    $default  reduce using rule 80 (loop_init)


State 142

   79 while_statement: WHILE_TOKEN '(' expression ')' loop_init .

    $default  reduce using rule 79 (while_statement)


State 143

   82 loop_init: loop_block .

    $default  reduce using rule 82 (loop_init)


State 144

   81 loop_init: break_statement .

    $default  reduce using rule 81 (loop_init)


State 145

   65 argument_list: argument ',' argument_list .

    $default  reduce using rule 65 (argument_list)


State 146

   78 for_statement: FOR_TOKEN '(' expression ';' expression ';' . expression ')' loop_init

    INCREMENT         shift, and go to state 29
    DECREMENT         shift, and go to state 30
    IDENTIFIER_TOKEN  shift, and go to state 1
    INTEGER_TOKEN     shift, and go to state 31
    FLOAT_TOKEN       shift, and go to state 32
    '-'               shift, and go to state 33
    '!'               shift, and go to state 34
    '('               shift, and go to state 36

    identifier              go to state 40
    type                    go to state 41
    expression              go to state 152
    literal                 go to state 43
    binary_expr             go to state 44
    lvalue_expression       go to state 45
    declaration_expression  go to state 10
    unary_operation         go to state 46
    assignment              go to state 47
    function_call           go to state 48


State 147

   88 break_statement: BREAK_TOKEN ';' .

    $default  reduce using rule 88 (break_statement)


State 148

   86 loop_statement: local_statement .

    $default  reduce using rule 86 (loop_statement)


State 149

   85 loop_block: '{' loop_statements . '}'

    '}'  shift, and go to state 153


State 150

   83 loop_statements: loop_statement . loop_statements
   84                | loop_statement .

    IF_TOKEN          shift, and go to state 25
    FOR_TOKEN         shift, and go to state 26
    WHILE_TOKEN       shift, and go to state 27
    BREAK_TOKEN       shift, and go to state 139
    RETURN_TOKEN      shift, and go to state 28
    INCREMENT         shift, and go to state 29
    DECREMENT         shift, and go to state 30
    IDENTIFIER_TOKEN  shift, and go to state 1
    INTEGER_TOKEN     shift, and go to state 31
    FLOAT_TOKEN       shift, and go to state 32
    '-'               shift, and go to state 33
    '!'               shift, and go to state 34
    '{'               shift, and go to state 35
    '('               shift, and go to state 36

    $default  reduce using rule 84 (loop_statements)

    generic_local_statement  go to state 38
    local_statement          go to state 148
    identifier               go to state 40
    type                     go to state 41
    expression               go to state 42
    literal                  go to state 43
    binary_expr              go to state 44
    lvalue_expression        go to state 45
    declaration_expression   go to state 10
    unary_operation          go to state 46
    assignment               go to state 47
    function_call            go to state 48
    conditional_statement    go to state 49
    if_statement             go to state 50
    return_statement         go to state 51
    block_statement          go to state 52
    loop                     go to state 53
    for_statement            go to state 54
    while_statement          go to state 55
    loop_statements          go to state 154
    loop_statement           go to state 150
    break_statement          go to state 151


State 151

   87 loop_statement: break_statement .

    $default  reduce using rule 87 (loop_statement)


State 152

   33 binary_expr: expression . '+' expression
   34            | expression . '-' expression
   35            | expression . '*' expression
   36            | expression . '/' expression
   37            | expression . '%' expression
   38            | expression . AND expression
   39            | expression . OR expression
   40            | expression . '<' expression
   41            | expression . '>' expression
   42            | expression . GEQ expression
   43            | expression . LEQ expression
   44            | expression . NEQ expression
   45            | expression . EQ expression
   78 for_statement: FOR_TOKEN '(' expression ';' expression ';' expression . ')' loop_init

    GEQ  shift, and go to state 77
    LEQ  shift, and go to state 78
    NEQ  shift, and go to state 79
    EQ   shift, and go to state 80
    AND  shift, and go to state 81
    OR   shift, and go to state 82
    '<'  shift, and go to state 83
    '>'  shift, and go to state 84
    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '%'  shift, and go to state 89
    ')'  shift, and go to state 155


State 153

   85 loop_block: '{' loop_statements '}' .

    $default  reduce using rule 85 (loop_block)


State 154

   83 loop_statements: loop_statement loop_statements .

    $default  reduce using rule 83 (loop_statements)


State 155

   78 for_statement: FOR_TOKEN '(' expression ';' expression ';' expression ')' . loop_init

    IF_TOKEN          shift, and go to state 25
    FOR_TOKEN         shift, and go to state 26
    WHILE_TOKEN       shift, and go to state 27
    BREAK_TOKEN       shift, and go to state 139
    RETURN_TOKEN      shift, and go to state 28
    INCREMENT         shift, and go to state 29
    DECREMENT         shift, and go to state 30
    IDENTIFIER_TOKEN  shift, and go to state 1
    INTEGER_TOKEN     shift, and go to state 31
    FLOAT_TOKEN       shift, and go to state 32
    '-'               shift, and go to state 33
    '!'               shift, and go to state 34
    '{'               shift, and go to state 140
    '('               shift, and go to state 36

    generic_local_statement  go to state 141
    identifier               go to state 40
    type                     go to state 41
    expression               go to state 42
    literal                  go to state 43
    binary_expr              go to state 44
    lvalue_expression        go to state 45
    declaration_expression   go to state 10
    unary_operation          go to state 46
    assignment               go to state 47
    function_call            go to state 48
    conditional_statement    go to state 49
    if_statement             go to state 50
    return_statement         go to state 51
    loop                     go to state 53
    for_statement            go to state 54
    while_statement          go to state 55
    loop_init                go to state 156
    loop_block               go to state 143
    break_statement          go to state 144


State 156

   78 for_statement: FOR_TOKEN '(' expression ';' expression ';' expression ')' loop_init .

    $default  reduce using rule 78 (for_statement)
